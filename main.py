# –ü—Ä–∏–≤—ñ—Ç —á–∏—Ç–∞—á, —Ü–µ –ø–µ—Ä–µ—Ä–æ–±–∫–∞ –º–æ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É Scarl3t, –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–µ—Å—å —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —è –Ω–µ –ø–µ—Ä–µ–Ω–µ—Å—É, –±–æ –ø–∏—Å–∞–≤ –π–æ–≥–æ —è –±–ª–∏–∑—å–∫–æ 2 —Ç–∏–∂–Ω—ñ–≤, –∞ –Ω–∞ —Ü–µ–π —É –º–µ–Ω–µ –≤—ñ–¥—Å–∏–ª–∏ –∫—ñ–ª—å–∫–∞ –¥–Ω—ñ–≤ —Ä–∞–∑–æ–º –∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º —Ç–µ–∑, —Ç–µ–∑–∞–º–∏ —ñ –≤—Å—ñ–ª—è–∫–æ—é —Ñ—ñ–≥–Ω–µ—é, —è–∫—â–æ —Ü—ñ–∫–∞–≤–æ, —â–æ –∑–∞ —Å–∫–∞—Ä–ª–µ—Ç, –æ—Å—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://github.com/konstie1/Scarl3t-file-sharing-service
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import BoundFilter
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from string import ascii_letters, digits
import random
import sqlite3
# –Ø –±—É–¥—É —Å—É–ø—Ä–æ–≤–æ–¥–∂—É–≤–∞—Ç–∏ —Ç–µ–±–µ –≤–µ—Å—å –∫–æ–¥, —Ç–æ–∂ –¥–∞–≤–∞–π –∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è

# –Ø –≤–∞–Ω—è –∞–±–æ Konstie, –∞ —Ü–µ —Ç–æ–∫–µ–Ω –∞–±–æ token
TOKEN = ""

# –ê —Ç—É—Ç –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î –Ω–µ—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ..
import sqlite3

def verif_db():
    databaseFile = "data.db"
    db = sqlite3.connect(databaseFile, check_same_thread=False)
    cursor = db.cursor()

    try:
        cursor.execute("SELECT * FROM users")
    except sqlite3.OperationalError:
        cursor.execute(
            "CREATE TABLE users(id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INT)"
        )

    try:
        cursor.execute("SELECT * FROM files")
    except sqlite3.OperationalError:
        cursor.execute(
            "CREATE TABLE files(user_id INT, type TEXT, code TEXT, file_id TEXT, views INT DEFAULT (0), password TEXT)"
        )

    cursor.execute("PRAGMA table_info(files)")
    columns = [info[1] for info in cursor.fetchall()]
    if "file_name" not in columns:
        cursor.execute("ALTER TABLE files ADD COLUMN file_name TEXT")

    db.commit()


# –í–∑–∞–≥–∞–ª—ñ —è –∫–æ–º–µ–Ω—Ç–∏ –ø–∏—à—É –ø—ñ–¥ —á–∞—Å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –∫–æ–¥—É, –∞–ª–µ –æ—Å–∫—ñ–ª—å–∫–∏ —è —Å–µ–±–µ –∑–Ω–∞—é, –∫–æ–¥ –±—É–¥—É 100 —Ä–∞–∑—ñ–≤ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ç–∏, —Ç–æ–∂ —É—Å–µ –∂ —Ç–∞–∫–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –±—É–¥—É —è–∫–æ—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É–≤–∞—Ç–∏ —É –∫—ñ–Ω—Ü—ñ, —â–æ–± –º–∏ —Ä–∞–∑–æ–º —ñ—à–ª–∏ –∑–≥–æ—Ä–∏ –¥–æ–Ω–∏–∑—É –ø–æ –∫–æ–¥—É)
def user_exist(user_id):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    cursor.execute("SELECT user_id FROM users WHERE user_id=?", (user_id,))
    if cursor.fetchone() is None:
        return False
    else:
        return True

# –î–æ —Ä–µ—á—ñ, —è –¥–æ–≤–≥–æ –¥—É–º–∞–≤, —è–∫ –∫—Ä–∞—â–µ –∑—Ä–æ–±–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö, –∑—Ä–µ—à—Ç–æ—é –≤–∏—Ä—ñ—à–∏–≤ –∑—Ä–æ–±–∏—Ç–∏ sqlite3 —Ö–æ—á–∞ –≤ –º–∏–Ω—É–ª–∏—Ö —Å—Ö–æ–∂–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ json
def add_user_to_db(user_id):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    user = [user_id]
    cursor.execute(f"""INSERT INTO users(user_id) VALUES(?)""", user)
    db.commit()

# –ê–ª–µ –¥–ª—è –∫–æ–Ω–∫—É—Ä—Å—É sqlite3 –º–∞—î –±—ñ–ª—å—à –ø–æ—Ç—É–∂–Ω—ñ—à–∏–π –≤–∏–≥–ª—è–¥, —Ç–∞ –π —É json –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∞—Ä–∏—Ç—å—Å—è –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º–∏, backup —ñ –≤—Å—è–∫–æ—é —Ç–∞–∫–æ—é —à–Ω—è–≥–æ—é
def add_new_file(user_id, type, code, file_id, file_name):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    data = [user_id, type, code, file_id, file_name]
    cursor.execute("INSERT INTO files(user_id, type, code, file_id, file_name) VALUES(?,?,?,?,?)", data)
    db.commit()

# –Ø —Ç–∞–∫ —ñ –Ω–µ –ø—Ä–∏–¥—É–º–∞–≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —è–∫ –∑—Ä–æ–±–∏—Ç–∏ –ø–∞—Ä–æ–ª—ñ, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤–∏–π—à–ª–æ, —â–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –º–µ—Ä–∑–µ–Ω–Ω–µ null, –∫–æ–ª–∏ –Ω–µ–º–∞—î –ø–∞—Ä–æ–ª—è
def add_new_pass_file(user_id, type, code, file_id, password, file_name):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    data = [user_id, type, code, file_id, password, file_name]
    cursor.execute("INSERT INTO files(user_id, type, code, file_id, password, file_name) VALUES(?,?,?,?,?,?)", data)
    db.commit()

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—É —Ç–µ–∂ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–µ, —Ö–æ—á–∞ —è –º–µ–Ω—ñ –∑–¥–∞—î—Ç—å—Å—è —â–æ—Å—å –ø–µ—Ä–µ–º—É–¥—Ä–∏–≤ –∑ return
def get_file(code):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    cursor.execute("SELECT file_id FROM files WHERE code=?", (code,))
    fileID = cursor.fetchone()
    cursor.execute("SELECT type FROM files WHERE code=?", (code,))
    type_file = cursor.fetchone()
    cursor.execute("SELECT views FROM files WHERE code=?", (code,))
    views = cursor.fetchone()
    cursor.execute("SELECT password FROM files WHERE code=?", (code,))
    password = cursor.fetchone()
    return type_file, fileID, views, password

# –ó–∞—Ä–∞–∑ –Ω–∞–ø–∏—Å–∞–Ω–æ —Ç—ñ–ª—å–∫–∏ —Ç—Ä–µ—Ç–∏–Ω—É —Ç–æ–≥–æ, —â–æ —è —Ö–æ—á—É, —è–∫—â–æ –±—É–¥–µ –±–ª–∏–∑—å–∫–æ 200-300 —Ä—è–¥–∫—ñ–≤ –∫–æ–¥—É –∑–Ω–∞–π—Ç–µ, –º–µ–Ω—ñ —Å—Ç–∞–ª–æ –ª—ñ–Ω—å–∫–∏)
def get_files(user_id):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()

    cursor.execute("SELECT code FROM files WHERE user_id=?", (user_id,))
    fileIDs = cursor.fetchall()

    cursor.execute("SELECT type FROM files WHERE user_id=?", (user_id,))
    types_my_file = cursor.fetchall()

    cursor.execute("SELECT views FROM files WHERE user_id=?", (user_id,))
    views = cursor.fetchall()

    cursor.execute("SELECT password FROM files WHERE user_id=?", (user_id,))
    passwords = cursor.fetchall()

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤
    cursor.execute("SELECT file_name FROM files WHERE user_id=?", (user_id,))
    file_names = cursor.fetchall()

    return types_my_file, fileIDs, views, passwords, file_names


# –£ –º–µ–Ω–µ –∑'—è–≤–∏–ª–∞—Å—è –ø—Ä–∏–∫–æ–ª—å–Ω–∞ —ñ–¥–µ—è, —è –ø–æ–¥–∏–≤–∏–≤—Å—è —Å—Ö–æ–∂—ñ —Ñ–∞–π–ª–æ–æ–±–º—ñ–Ω–Ω–∏–∫–∏
def view_updater(code):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    cursor.execute("SELECT views FROM files WHERE code=?", (code,))
    views = cursor.fetchone()
    cursor.execute(
        """UPDATE files SET views = ? WHERE code = ?""", (int(views[0]) + 1, code)
    )
    db.commit()

# –Ü –ø–æ–±–∞—á–∏–≤ —Ç–µ, —â–æ –≤ —ñ–Ω—à–∏—Ö –Ω–µ–º–∞—î –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —Å–∫–∞—á—É–≤–∞–Ω—å, —è –¥—É–º–∞—é, –º–æ–∂–Ω–∞ —â–æ—Å—å –ø–æ–¥—ñ–±–Ω–µ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏
def delete_file(code):
    db = sqlite3.connect("data.db", check_same_thread=False)
    cursor = db.cursor()
    cursor.execute("DELETE FROM files WHERE code = ?", (code,))
    db.commit()

# –Ø –±–∞—á–∏–≤ —Ä—ñ–∑–Ω–µ —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ —Ç–µ —â–æ tgAPI –Ω–µ –¥–∞—î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —é–∑–µ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–∏ –æ–±—Ä–æ–±–ª—è—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º 
class IsPrivate(BoundFilter):
    async def check(self, message: types.Message):
        return message.chat.type == types.ChatType.PRIVATE
# –ú–µ–Ω—ñ –∑–¥–∞—î—Ç—å—Å—è –º–æ—î —Ä—ñ—à–µ–Ω–Ω—è –º–∞—î –º—ñ—Å—Ü–µ –±—É—Ç–∏, —è –∑—Ä–æ–±–ª—é —Ç–∞–∫, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–∏–≤'—è–∑—É–≤–∞–≤—Å—è —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Ç—É
class Info(StatesGroup):
    upload_file = State()
    upload_file_password = State()
    main_delete_button = State()
    check_password = State()
# –£–∂–µ –∑—Ä–æ–±–∏–≤ –¥–≤–∞ —Å—Ç–∞—Ç—É—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —Å—Ç–∞—Ç—É—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É, —ñ —Å—Ç–∞—Ç—É—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è —Ñ–∞–π–ª—É —Ö–æ—á–∞ —è —â–µ –Ω–µ –ø—Ä–∏–¥—É–º–∞–≤ –¥–æ –∫—ñ–Ω—Ü—è –∑ –ø–∞—Ä–æ–ª—è–º–∏
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# –í–∏—Ä—ñ—à–∏–≤ —Ü—å–æ–≥–æ —Ä–∞–∑—É –≤–∏–Ω–µ—Å—Ç–∏ –º–µ–Ω—é –≤ –æ–∫—Ä–µ–º—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —Å–ø–æ—á–∞—Ç–∫—É –¥—É–º–∞–≤ –∑—Ä–æ–±–∏—Ç–∏ –∫–ª–∞—Å, –∞–ª–µ –Ω–∞–ø–µ–≤–Ω–æ —Ü–µ –∑–∞–Ω–∞–¥—Ç–æ
def main_menu_buttons():
	button1 = KeyboardButton('üì© –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª')
	button2 = KeyboardButton('üóÉÔ∏è –û—Å–æ–±–∏—Å—Ç—ñ —Ñ–∞–π–ª–∏')
	main_menu_buttons = ReplyKeyboardMarkup(resize_keyboard=True)
	main_menu_buttons.add(button1)
	main_menu_buttons.add(button2)
	return main_menu_buttons

# –ù–∞ –∂–∞–ª—å, —è –Ω–µ –ø—Ä–∏–¥—É–º–∞–≤ —è–∫ –æ–±'—î–¥–Ω–∞—Ç–∏ –∫–Ω–æ–ø–∫—É —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É —ñ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
def back_button():
	button1 = KeyboardButton('–û—Ç–º–µ–Ω–∞')
	back_button1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
	back_button1.add(button1)
	return back_button1


def main_delete_button():
	markup = InlineKeyboardMarkup()
	btn2 = InlineKeyboardButton(text='üß∫–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–∞–π–ª', callback_data=f'main_delete_button')
	markup.add(btn2)
	return markup
	
# –ó—Ä–æ–±–∏–≤ –¥–æ–¥–∞—Ç–∫–æ–≤—É –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è, –º–µ–Ω—ñ —Ü–µ –¥—É–∂–µ –Ω–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è
def back_delete_button():
	markup = InlineKeyboardMarkup()
	btn2 = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data=f'back_delete_button')
	markup.add(btn2)
	return markup

# –î–æ —Ä–µ—á—ñ —ñ–¥–µ—ó –∑—ñ —Å—Ç–∞–Ω–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —è –ø—Ä–∏–¥—É–º–∞–≤ –∫–æ–ª–∏ –ø–∏—Å–∞–≤ —Å–≤–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ –±–æ—Ç–∞
@dp.message_handler(IsPrivate(), commands=['start'], state='*')
async def start_command(message: types.Message, state: FSMContext):
	args = message.get_args()
	bot_data = await bot.get_me()
	bot_name = bot_data['username']
	if user_exist(message.chat.id) == False:
		add_user_to_db(message.chat.id)
		if not args:
			await bot.send_message(chat_id=message.chat.id, text='–í—ñ—Ç–∞—é —Ç–µ–±–µ –Ω–∞ –Ω–∞—à–æ–º—É —Ñ–∞–π–ª–æ–æ–±–º—ñ–Ω–Ω–∏–∫—É! üåê–ú–µ–Ω–µ –∑–≤—É—Ç—å {bot_name}, —ñ —è —Ç—É—Ç, —â–æ–± –ø–æ–ª–µ–≥—à–∏—Ç–∏ —Ç–≤—ñ–π –¥–æ—Å–≤—ñ–¥ –æ–±–º—ñ–Ω—É —Ñ–∞–π–ª–∞–º–∏. –ë–µ–∑–ø–µ—á–Ω–æ, –∑—Ä—É—á–Ω–æ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ - —Ü–µ —Ç–µ, —â–æ —è –ø—Ä–æ–ø–æ–Ω—É—é.', reply_markup = main_menu_buttons())
		else:
			type_file, fileID, views, password = get_file(args)
			if type_file is None and fileID is None:
				await bot.send_message(chat_id=message.chat.id, text='–§–∞–π–ª –≤—Ç—Ä–∞—á–µ–Ω–æ...', reply_markup = main_menu_buttons())
			else:
				if password == (None,): # –ó—Ä–æ–±–∏–≤ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–∞–π–ª—É
					view_updater(args)
					if type_file[0] == 'photo': # –ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–≤ –π–æ–≥–æ –≤ "–ø–µ—Ä–µ–≥–ª—è–¥–∏"
						await bot.send_photo(chat_id=message.chat.id, photo=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'video':
						await bot.send_video(chat_id=message.chat.id, video=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'voice':
						await bot.send_voice(chat_id=message.chat.id, voice=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'document':
						await bot.send_document(chat_id=message.chat.id, document=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				else:# –©–µ –Ω–µ –∑—Ä–æ–±–∏–≤ –∑–∞—Ö–∏—Å—Ç —Ñ–∞–π–ª—É –ø–∞—Ä–æ–ª–µ–º, –∞–ª–µ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å –∑—Ä–æ–±–ª—é –≤–∏–Ω—è—Ç–æ–∫
					await bot.send_message(chat_id=message.chat.id, text='–§–∞–π–ª –∑–∞—Ö–∏—â–µ–Ω–∏–π –ø–∞—Ä–æ–ª–µ–ºüîí, –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ–∞–π–ª—É –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:', reply_markup = back_button())# –°–∫–æ—Ä–∏—Å—Ç–∞—é—Å—è —Ç–∏–º, —â–æ –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è –Ω–µ –ø–æ—Ä–æ–∂–Ω—î –ø–æ–ª–µ, —ñ –Ω–µ –±—É–¥—É –ø–∞—Ä–∏—Ç–∏—Å—è, –≤—Å–µ —Ç–∞–∫–∏ –∑–∞–ª–∏—à—É, –ù–ï –ë–ê–ì –ê –§–Ü–ß–ê
					await state.update_data(check_password=args)
					await Info.check_password.set()
	else:
		if not args: # –£–∂–µ —à–∫–æ–¥—É—é, —â–æ –Ω–∞ python –ø–∏—à—É, —á–µ—Ä–µ–∑ —Ç–µ —â–æ –≤—ñ–¥–≤–∏–∫ –¥–æ —Ç–∞–±—É–ª—è—Ü—ñ—ó
			await bot.send_message(chat_id=message.chat.id, text='–í—ñ—Ç–∞—é —Ç–µ–±–µ –Ω–∞ –Ω–∞—à–æ–º—É —Ñ–∞–π–ª–æ–æ–±–º—ñ–Ω–Ω–∏–∫—É! üåê–ú–µ–Ω–µ –∑–≤—É—Ç—å MyFyles, —ñ —è —Ç—É—Ç, —â–æ–± –ø–æ–ª–µ–≥—à–∏—Ç–∏ —Ç–≤—ñ–π –¥–æ—Å–≤—ñ–¥ –æ–±–º—ñ–Ω—É —Ñ–∞–π–ª–∞–º–∏. –ë–µ–∑–ø–µ—á–Ω–æ, –∑—Ä—É—á–Ω–æ —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ - —Ü–µ —Ç–µ, —â–æ —è –ø—Ä–æ–ø–æ–Ω—É—é.', reply_markup = main_menu_buttons())
		else:
			type_file, fileID, views, password = get_file(args)
			if type_file is None and fileID is None:
				await bot.send_message(chat_id=message.chat.id, text='–§–∞–π–ª –≤—Ç—Ä–∞—á–µ–Ω–æ...', reply_markup = main_menu_buttons())
			else:
				if password == (None,):
					view_updater(args) # –ù–µ –ª—é–±–ª—é –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ –∫–æ–¥, –∞–ª–µ –ø—Ä–∏–¥—É–º—É–≤–∞—Ç–∏ —â–æ—Å—å —ñ–∑ —Ü–∏–º –º–µ–Ω—ñ –ª—ñ–Ω—å–∫–∏
					if type_file[0] == 'photo':
						await bot.send_photo(chat_id=message.chat.id, photo=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'video':
						await bot.send_video(chat_id=message.chat.id, video=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'voice':
						await bot.send_voice(chat_id=message.chat.id, voice=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
					elif type_file[0] == 'document':
						await bot.send_document(chat_id=message.chat.id, document=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				else: # –ß–æ–º—É –±–æ–≥ –Ω–µ –¥–æ–¥–∞–≤ Case –¥–æ python..
					await bot.send_message(chat_id=message.chat.id, text='–§–∞–π–ª –∑–∞—Ö–∏—â–µ–Ω–∏–π –ø–∞—Ä–æ–ª–µ–ºüîí, –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ–∞–π–ª—É –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:', reply_markup = back_button())
					await state.update_data(check_password=args)
					await Info.check_password.set()

@dp.message_handler(state=Info.check_password, content_types=types.ContentTypes.ANY) # –î–æ —Ä–µ—á—ñ –ø—Ä–æ —Å—Ç–∞—Ç—É—Å–∏ , –º—ñ–π –ø–µ—Ä—à–∏–π –±–æ—Ç, –¥–µ —è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ —Å—Ç–∞—Ç—É—Å–∏, –±—É–≤ –Ω–∞ js —ñ —É 2021 —Ä–æ–∫—É
async def upload_file(message: types.Message, state: FSMContext):
	bot_data = await bot.get_me()
	bot_name = bot_data['username']
	if message.text: 
		if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
			await bot.send_message(chat_id=message.chat.id, text='–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.üè†', reply_markup=main_menu_buttons())
			await state.finish()
		else:
			user_data = await state.get_data()
			code = user_data['check_password']
			type_file, fileID, views, password = get_file(code) # –ü–∏—Å–∞–≤ —è –π–æ–≥–æ –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ –∑–Ω–∞–π–æ–º–æ–≥–æ, —è–∫–∏–π —Ä–æ–±–∏–≤ —Å–≤—ñ–π –±—ñ–∑–Ω–µ—Å —ñ–∑ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂—É

			if message.text == password[0]:
				view_updater(code)
				if type_file[0] == 'photo':
					await bot.send_photo(chat_id=message.chat.id, photo=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				elif type_file[0] == 'video':
					await bot.send_video(chat_id=message.chat.id, video=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				elif type_file[0] == 'voice':
					await bot.send_voice(chat_id=message.chat.id, voice=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				elif type_file[0] == 'document':
					await bot.send_document(chat_id=message.chat.id, document=fileID[0], caption=f'üëÅ –ü–µ—Ä–µ–≥–ª—è–¥–∏: {int(views[0])+1}', reply_markup = main_menu_buttons())
				await state.finish()
			else:
				await bot.send_message(chat_id=message.chat.id, text='üòî–£–ø—Å, —Ü–µ –Ω–µ –≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑:', reply_markup = back_button())
	else:
		await bot.send_message(chat_id=message.chat.id, text='üòî–£–ø—Å, —Ü–µ –Ω–µ –≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑:', reply_markup = back_button())


@dp.message_handler(text="üì© –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª") # –ü–∞—Ä–∏–≤—Å—è —è –∑—ñ —Å—Ç—Ä—ñ—á–∫–æ—é –∑–∞–º–æ–≤–ª–µ–Ω—å —ñ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è–º —Ü—ñ–Ω –¥—É–∂–µ –¥–æ–≤–≥–æ —É –ø–µ—Ä—à–æ–º—É –±–æ—Ç—ñ
async def create_post(message: types.Message):
	if user_exist(message.chat.id) == True:
		await bot.send_message(chat_id=message.chat.id, text='–ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ñ–∞–π–ª.', reply_markup = back_button())
		await Info.upload_file.set()

@dp.message_handler(text="üóÉÔ∏è –û—Å–æ–±–∏—Å—Ç—ñ —Ñ–∞–π–ª–∏")
async def create_post(message: types.Message):
    if user_exist(message.chat.id) == True:
        bot_data = await bot.get_me()
        bot_name = bot_data['username']
        all_types, all_ids, all_views, passwords, file_name = get_files(message.from_user.id)

        if not all_types:
            await bot.send_message(chat_id=message.chat.id, text='–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "üì© –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª"', reply_markup=main_menu_buttons())
        else:
            file_message = ""
            for i, id_file in enumerate(all_ids):
                file_message += (
                    f"{i + 1} | https://t.me/{bot_name}?start={id_file[0]} | \n"
                    f"üìÅ {file_name[i][0]} | üëÅ {all_views[i][0]} | üîí{passwords[i][0]}\n"
                )

            await bot.send_message(chat_id=message.chat.id, text=file_message, reply_markup=main_delete_button())

@dp.message_handler(state=Info.upload_file_password, content_types=types.ContentTypes.TEXT) # –ù–µ –ø–∞–º'—è—Ç–∞—é —â–æ —Ç–∞–º —ñ–∑ —Ç–∞–π–º–∞—É—Ç–∞–º–∏ –≤ TG –∞–ª–µ —Å–ø–æ–¥—ñ–≤–∞—é—Å—è –æ–±—ñ–π–¥—É—Å—è –±–µ–∑ –≤—Å—è–∫–æ–≥–æ
async def upload_file(message: types.Message, state: FSMContext):
	bot_data = await bot.get_me()
	bot_name = bot_data['username']
	user_data = await state.get_data()
	file_data = user_data['upload_file_password']

	if message.text == '-': # –î—É–º–∞–≤, –º–æ–∂–µ, –≤–∞—Ä—Ç–æ –∑—Ä–æ–±–∏—Ç–∏ –∫–Ω–æ–ø–∫–æ—é, –∞ —Ç–æ –º–µ–Ω–µ –±—ñ—Å–∏—Ç—å, —â–æ —Ç—Ä–µ–±–∞ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
		if file_data.split('|')[1] == 'photo':
			code = file_data.split('|')[2]
			add_new_file(file_data.split('|')[0], 'photo', file_data.split('|')[2], file_data.split('|')[3], file_data.split('|')[4])

			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'video':
			code = file_data.split('|')[2]
			add_new_file(file_data.split('|')[0], 'video', file_data.split('|')[2], file_data.split('|')[3], file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'voice':
			code = file_data.split('|')[2]
			add_new_file(file_data.split('|')[0], 'voice', file_data.split('|')[2], file_data.split('|')[3], file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'document':
			code = file_data.split('|')[2]
			add_new_file(file_data.split('|')[0], 'document', file_data.split('|')[2], file_data.split('|')[3], file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
	elif message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
		await bot.send_message(chat_id=message.chat.id, text='–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.üè†', reply_markup=main_menu_buttons())
		await state.finish() # –®–∫–æ–¥–∞ —â–æ –º–µ–Ω—ñ –Ω–µ –∑–∞–ø–ª–∞—Ç—è—Ç—å –∑–∞ —Ü–µ, –±–æ —Ç—ñ—î—ó –∞—Ç–º–æ—Å—Ñ–µ—Ä–∏ –∑–∞ —è–∫—É —è –ª—é–±–ª—é –ø—Ä–æ–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –Ω–µ –º–∞—î(
	else:
		if file_data.split('|')[1] == 'photo':
			code = file_data.split('|')[2]
			add_new_pass_file(file_data.split('|')[0], 'photo', file_data.split('|')[2], file_data.split('|')[3], message.text, file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîí–ü–∞—Ä–æ–ª—å: {message.text}\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'video': # –Ø –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç —É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—ñ, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, –∫–æ–ª–∏ —î –æ—Å–æ–±–ª–∏–≤–∏–π –≤–∞–π–±
			code = file_data.split('|')[2]
			add_new_pass_file(file_data.split('|')[0], 'video', file_data.split('|')[2], file_data.split('|')[3], message.text, file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîí–ü–∞—Ä–æ–ª—å: {message.text}\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'voice':
			code = file_data.split('|')[2]
			add_new_pass_file(file_data.split('|')[0], 'voice', file_data.split('|')[2], file_data.split('|')[3], message.text, file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîí–ü–∞—Ä–æ–ª—å: {message.text}\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()
		elif file_data.split('|')[1] == 'document':
			code = file_data.split('|')[2]
			add_new_pass_file(file_data.split('|')[0], 'document', file_data.split('|')[2], file_data.split('|')[3], message.text, file_data.split('|')[4])
			await bot.send_message(chat_id=message.chat.id, text=f'üìÅ–§–∞–π–ª –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.\n\nüîí–ü–∞—Ä–æ–ª—å: {message.text}\n\nüîó–©–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–∏–º –≤—ñ–¥–ø—Ä–∞–≤ —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/{bot_name}?start={code}', reply_markup=main_menu_buttons())
			await state.finish()


# { 
# 	"special vibe": [
# 		"weather": "rain",
# 		"drink": [
# 			"drink type": "coffee",
# 			"sugar": "one teaspoon",
# 			"temperature": "mood-wise",
# 			"cup": "personal"
# 		]
# 		"Time": "late evening",
# 		"outfit": "soft sleepwear",
# 		"music": [
# 			"volum": "mild",
# 			"language": "ENG && UA",
# 		]
		
# 	]
# }


@dp.message_handler(state=Info.upload_file, content_types=types.ContentTypes.ANY)
async def upload_file(message: types.Message, state: FSMContext):
	bot_data = await bot.get_me()
	bot_name = bot_data['username']
	file_name = message.document.file_name if message.document else 'media'
	if message.photo: # –Ø–∫–∏–π –∂–∞—Ö —É —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑ —Ü–∏–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª—ñ–≤ —á–æ–º—É –§–û–¢–û —Ü–µ –Ω–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ü–µ —è –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è 
		fileID = message.photo[-1].file_id
		code = ''.join(random.sample(ascii_letters + digits, random.randint(33, 40)))
		await state.update_data(upload_file_password=f'{message.from_user.id}|photo|{code}|{fileID}|{file_name}')
		await bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—åüîí –¥–ª—è —Ñ–∞–π–ª—É. –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à, —Ç–æ –Ω–∞–ø–∏—à–∏ "-".', reply_markup=back_button())
		await Info.upload_file_password.set()
	elif message.text: # –Ø–∫–∏–π –∂–∞—Ö —É —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑ —Ü–∏–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª—ñ–≤ —á–æ–º—É –§–û–¢–û —Ü–µ –Ω–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ü–µ —è –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è 
		if message.text.lower() == '–æ—Ç–º–µ–Ω–∞':
			await bot.send_message(chat_id=message.chat.id, text='–¢–∏ –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞–∑–∞–¥.üîô', reply_markup=main_menu_buttons())
			await state.finish()
		else:
			await bot.send_message(chat_id=message.chat.id, text='–ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ñ–∞–π–ª.', reply_markup=back_button())
	elif message.voice: # –Ø–∫–∏–π –∂–∞—Ö —É —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑ —Ü–∏–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª—ñ–≤ —á–æ–º—É –§–û–¢–û —Ü–µ –Ω–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ü–µ —è –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è 
		fileID = message.voice.file_id
		code = ''.join(random.sample(ascii_letters + digits, random.randint(33, 40)))
		await state.update_data(upload_file_password=f'{message.from_user.id}|voice|{code}|{fileID}|{file_name}')
		await bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—åüîí –¥–ª—è —Ñ–∞–π–ª—É. –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à, —Ç–æ –Ω–∞–ø–∏—à–∏ "-".', reply_markup=back_button())
		await Info.upload_file_password.set()
	elif message.video: # –Ø–∫–∏–π –∂–∞—Ö —É —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑ —Ü–∏–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª—ñ–≤ —á–æ–º—É –§–û–¢–û —Ü–µ –Ω–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ü–µ —è –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è 
		fileID = message.video.file_id
		code = ''.join(random.sample(ascii_letters + digits, random.randint(33, 40)))
		await state.update_data(upload_file_password=f'{message.from_user.id}|video|{code}|{fileID}|{file_name}')
		await bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—åüîí –¥–ª—è —Ñ–∞–π–ª—É. –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à, —Ç–æ –Ω–∞–ø–∏—à–∏ "-".', reply_markup=back_button())
		await Info.upload_file_password.set()
	elif message.document: # –Ø–∫–∏–π –∂–∞—Ö —É —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –∑ —Ü–∏–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª—ñ–≤ —á–æ–º—É –§–û–¢–û —Ü–µ –Ω–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ü–µ —è –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è 
		fileID = message.document.file_id
		code = ''.join(random.sample(ascii_letters + digits, random.randint(33, 40)))
		await state.update_data(upload_file_password=f'{message.from_user.id}|document|{code}|{fileID}|{file_name}')
		await bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—åüîí –¥–ª—è —Ñ–∞–π–ª—É. –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ—à, —Ç–æ –Ω–∞–ø–∏—à–∏ "-".', reply_markup=back_button())
		await Info.upload_file_password.set()

@dp.message_handler(state=Info.main_delete_button, content_types=types.ContentTypes.TEXT)
async def del_file(message: types.Message, state: FSMContext):
	try:
		number = int(message.text)
		user_data = await state.get_data()
		mess_id = user_data['main_delete_button'] # –í—Å–µ —Ç–∞–∫–∏ —Ä–æ–±–ª—é –æ–∫—Ä–µ–º—É –∫–Ω–æ–ø–∫—É, –Ω–µ –∑–º—ñ–≥ –ø—Ä–∏–¥—É–º–∞—Ç–∏ —è–∫ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ –æ–¥–Ω—ñ—î—é –∫–Ω–æ–ø–∫–æ—é
		all_types, all_ids, all_views, passwords, file_name = get_files(message.from_user.id)
		if number > len(all_ids):
			await bot.send_message(chat_id=message.chat.id, text='–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª—É –Ω–µ —ñ—Å–Ω—É—î. –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª—É:', reply_markup=back_delete_button())
		else:
			delete_file(all_ids[(number-1)][0]) # –£ –º–µ–Ω–µ –∑'—è–≤–∏–ª–∞—Å—è –ø—Ä–æ–±–ª–µ–º–∞ –∑ id —Ñ–∞–π–ª—É —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è–º —Ñ–∞–π–ª–∞
			await bot.delete_message(message.chat.id, mess_id) # –ü—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫ id –Ω–µ —Ö–æ—á–µ —Å–∫–∏–¥–∞—Ç–∏—Å—è 
			await bot.send_message(chat_id=message.chat.id, text='–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–∏–ª–∏ —Ñ–∞–π–ª!', reply_markup=main_menu_buttons())
			await state.finish()
	except ValueError:
		await bot.send_message(chat_id=message.chat.id, text='–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª—É:', reply_markup=back_delete_button())


@dp.callback_query_handler(state='*')
async def handler_call(call: types.CallbackQuery, state: FSMContext):
	bot_data = await bot.get_me()
	bot_name = bot_data['username']
	chat_id = call.from_user.id
	if call.data == 'main_delete_button': # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É —è –¥—É–º–∞—é –Ω–µ –±—É–¥–µ –∑–∞–π–≤–∏–º
		all_types, all_ids, all_views, passwords, file_name = get_files(chat_id)
		if all_ids == []:
			await bot.delete_message(chat_id, call.message.message_id)
			await bot.send_message(chat_id=chat_id, text='–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "üì© –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª"', reply_markup = main_menu_buttons())
		else:
			text='–Ø–∫–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª—è–µ–º–æ?: \n\n'
			for i, id_file in enumerate(all_ids):
				text+=f'{i+1}. https://t.me/{str(bot_name)}?start={id_file[0]} | {file_name[i][0]}\n\n'
			text+='–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª—É, —è–∫–∏–π —Ç–∏ —Ö–æ—á–µ—à –≤–∏–¥–∞–ª–∏—Ç–∏.'
			await bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id, text=text, reply_markup=back_delete_button())
			await state.update_data(main_delete_button=call.message.message_id)
			await Info.main_delete_button.set()
	if call.data == 'back_delete_button':
		await state.finish()
		all_types, all_ids, all_views, passwords, file_name = get_files(chat_id)
		if all_ids == []: # –í–∑–∞–≥–∞–ª—ñ —Ç–µ —â–æ —è —Ç—É—Ç –Ω–∞–ø–∏—Å–∞–≤ —É —Ü—å–æ–º—É —Ä—è–¥–∫—É –º–∞—è—á–Ω—è, —ñ —Ç–∞–∫ –∫—Ä–∞—â–µ –Ω–µ —Ä–æ–±–∏—Ç–∏
			await bot.delete_message(chat_id, call.message.message_id)
			await bot.send_message(chat_id=chat_id, text='–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤, —â–æ–± –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "üì© –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª"', reply_markup = main_menu_buttons())
		else:

			for i, id_file in enumerate(all_ids):

				file_message = (
					f"{i + 1} | https://t.me/{str(bot_name)}?start={id_file[0]} \n"
					f"üìÅ {file_name}üëÅ {all_views[i][0]} | üîí{passwords[i][0]}"
				) # –ó–∞ —ñ–¥–µ—î—é —è –ø–æ–≤–∏–Ω–µ–Ω –±—É–≤ –∑—Ä–æ–±–∏—Ç–∏ —Ü—é —á–∞—Å—Ç–∏–Ω—É –∫–æ–¥—É —á–µ—Ä–µ–∑ try –∞–ª–µ –º–µ–Ω—ñ —Ç–∞–∞–∞–∞–∞–∫ –Ω–µ —Ö–æ—á–µ—Ç—å—Å—è 

			await bot.send_message(chat_id=chat_id, text=file_message, reply_markup=main_delete_button()) # 4:50 12.01.2024 —è –∑—Ä–æ–±–∏–≤ –æ—Å–Ω–æ–≤–Ω—É —á–∞—Å—Ç–∏–Ω—É, —Ö–æ—á—É —â–µ –∑—Ä–æ–±–∏—Ç–∏ –ø–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
			# 7:34 12.01.2024 –∑'—è–≤–∏–ª–∞—Å—è —ñ–¥–µ—è –∑—Ä–æ–±–∏—Ç–∏ —Ñ–∞–π–ª, —è–∫–∏–π –∑–Ω–∏–∫–∞—î –≤ –ø–µ–≤–Ω—É –≥–æ–¥–∏–Ω—É, –≤–∏—Ä–µ—à–∏–≤ –∑–∞–ø–∏—Å–∞—Ç–∏

if __name__ == "__main__":
	verif_db()
	# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
	executor.start_polling(dp, skip_updates=True)